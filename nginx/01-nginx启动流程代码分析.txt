1、编译：

./configure   --prefix=/usr/local/nginx


2、启动函数
 src\core\nginx.c
int ngx_cdecl
main(int argc, char *const *argv)
{
    cycle = ngx_init_cycle(&init_cycle);
    
    if (ngx_process == NGX_PROCESS_SINGLE) {
            ngx_single_process_cycle(cycle);

        } else {
            ngx_master_process_cycle(cycle);
        }
 }  

3、解析命令运行的参数：
ngx_process_options(ngx_cycle_t *cycle)
{
    解析配置文件
    #ifdef NGX_CONF_PREFIX
            ngx_str_set(&cycle->conf_prefix, NGX_CONF_PREFIX);
    #else
            ngx_str_set(&cycle->conf_prefix, NGX_PREFIX);
    #endif
            ngx_str_set(&cycle->prefix, NGX_PREFIX);

    #endif

}


4、周期初始化
src\core\ngx_cycle.c
ngx_cycle_t *ngx_init_cycle(ngx_cycle_t *old_cycle)
{
    配置文件解析
    if (ngx_conf_parse(&conf, &cycle->conf_file) != NGX_CONF_OK) {
        environ = senv;
        ngx_destroy_cycle_pools(&conf);
        return NULL;
    }
        
    pool = ngx_create_pool(NGX_CYCLE_POOL_SIZE, log);

    共享内存创建
    opart = &old_cycle->shared_memory.part;
    oshm_zone = opart->elts;
    for (n = 0; /* void */ ; n++) {
    if (ngx_shm_alloc(&shm_zone[i].shm) != NGX_OK) {
                goto failed;
            }
    }
}


